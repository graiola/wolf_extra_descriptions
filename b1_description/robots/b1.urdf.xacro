<?xml version="1.0"?>

<robot name="b1" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- This argument allows us to load joint sensors that measure the internal wrenches -->
    <xacro:arg name="load_force_sensors" default="false"/>
    <xacro:arg name="sensors"            default="false"/>
    <xacro:arg name="period"             default="0.004"/>
    <xacro:arg name="arm_name"           default=""/>
    <xacro:arg name="floating_base_link" default="true"/>
    <xacro:arg name="robot_model"        default="b1"/>
    <xacro:arg name="robot_name"         default=""/>
    <xacro:arg name="base_name"          default="trunk"/>

    <xacro:include filename="$(find b1_description)/urdfs/const.xacro"/>
    <xacro:include filename="$(find b1_description)/urdfs/leg.xacro"/>

    <!-- load generic materials -->
    <xacro:include filename="$(find wolf_description_utils)/urdfs/materials.xacro"/>

    <!-- generic simulator_gazebo plugins for starting mechanism control, ros time -->
    <xacro:include filename="$(find wolf_description_utils)/urdfs/gazebo.urdf.xacro"/>

    <!-- legs transmission and gazebo plugins -->
    <xacro:include filename="$(find wolf_description_utils)/urdfs/leg.transmission.xacro"/>
    <xacro:include filename="$(find wolf_description_utils)/urdfs/leg.gazebo.xacro"/>

    <!-- sensors -->
    <xacro:if value="$(arg sensors)">
        <xacro:include filename="$(find sensors_description)/urdfs/sensors/imu.gazebo.xacro"/>
    </xacro:if>

    <!-- Rotor related joint and link is only for demonstrate location. -->
    <!-- Actually, the rotor will rotate and the joint is not fixed. Reduction ratio should be considered. -->

    <!-- Floating-base Joint -->
    <xacro:if value="$(arg floating_base_link)">
            <link name="world"/>
            <joint name="floating_base_joint" type="floating">
              <origin rpy="0 0 0" xyz="0 0 0"/>
              <parent link="world"/>
              <child link="trunk"/>
            </joint>
    </xacro:if>

    <link name="trunk">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://b1_description/meshes/trunk.dae" scale="1 1 1"/>
            </geometry>
            <material name="orange"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="${trunk_length} ${trunk_width} ${trunk_height}"/>
            </geometry>
        </collision>
        <!-- <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://b1_description/meshes/trunk.dae" scale="1 1 1"/>
            </geometry>
        </collision> -->
        <inertial>
            <origin rpy="0 0 0" xyz="${trunk_com_x} ${trunk_com_y} ${trunk_com_z}"/>
            <mass value="${trunk_mass}"/>
            <inertia
                ixx="${trunk_ixx}" ixy="${trunk_ixy}" ixz="${trunk_ixz}"
                iyy="${trunk_iyy}" iyz="${trunk_iyz}"
                izz="${trunk_izz}"/>  
        </inertial>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="trunk"/>
        <child link="trunk_imu"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>

    <link name="trunk_imu">
        <inertial>
            <mass value="0.001"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
            <material name="red"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size=".001 .001 .001"/>
            </geometry>
        </collision>
    </link>

    <xacro:leg name="rf" mirror="-1" mirror_dae="False"  front_hind="1"  front_hind_dae="True"  />
    <xacro:leg name="lf" mirror="1"  mirror_dae="True"   front_hind="1"  front_hind_dae="True"  />
    <xacro:leg name="rh" mirror="-1" mirror_dae="False"  front_hind="-1" front_hind_dae="False" />
    <xacro:leg name="lh" mirror="1"  mirror_dae="True"   front_hind="-1" front_hind_dae="False" />

    <!-- Extensions -->
    <xacro:leg_transmission prefix="rf"/>
    <xacro:leg_gazebo prefix="rf" robot_name="$(arg robot_name)" load_force_sensors="$(arg load_force_sensors)"/>
    <xacro:leg_transmission prefix="lf"/>
    <xacro:leg_gazebo prefix="lf" robot_name="$(arg robot_name)" load_force_sensors="$(arg load_force_sensors)"/>
    <xacro:leg_transmission prefix="rh"/>
    <xacro:leg_gazebo prefix="rh" robot_name="$(arg robot_name)" load_force_sensors="$(arg load_force_sensors)"/>
    <xacro:leg_transmission prefix="lh"/>
    <xacro:leg_gazebo prefix="lh" robot_name="$(arg robot_name)" load_force_sensors="$(arg load_force_sensors)"/>

    <xacro:if value="$(eval arm_name != '')">
        <xacro:include filename="$(find b1_description)/urdfs/arm/$(arg arm_name)_adapter.urdf.xacro" />
    </xacro:if>

</robot>
